#pragma once

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "Gpio.h"
#include <stdint.h>
#include "Display.h"
#include "ILI9341.h"
#include "SpiLcdHw.h"

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

class DisplayHw final : public Display
{
    static constexpr char * MODULE = (char *)"DisplayHw";

    public:
        explicit DisplayHw (Gpio & v_gpio, const Display::Configuration v_config);
        ~DisplayHw () = default;

        bool     DrawBitmap (const Rect v_rect            ) override;

    protected:
        void     sendLines  (const Rect v_rect            ) override;
        uint8_t  getColor   (const Display::EColors eColor) override;

    private:
        Gpio   & gpio;
        ILI9341  ili9341;
        SpiLcdHw spiLcdHw;
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
