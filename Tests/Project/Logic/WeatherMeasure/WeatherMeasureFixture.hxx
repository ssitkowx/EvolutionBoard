#pragma once 

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "Tasks.h"
#include "gtest/gtest.h"
#include "gmock/gmock.h"

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// FUNCTIONS ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

class WeatherMeasureFixture : public ::testing::Test, public Tasks
{
    public:
        static constexpr char * MODULE = (char *)"WeatherMeasureFixture";

        WeatherMeasureFixture () = default;
       ~WeatherMeasureFixture () = default;

    private:
        void TestBody () override { }

    protected:
        SystemTimeHw systemTimeHw;
        RtosHw       rtosHw;

        void SetUp    () override 
        {
            SET_SYSTEM_TIME_INST (&systemTimeHw);
            SET_RTOS_INST        (&rtosHw);
        }
        void TearDown () override { SystemEvents::GetInstance ().CircBuf.Reset (); }
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

