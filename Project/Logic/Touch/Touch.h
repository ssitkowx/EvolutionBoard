#pragma once

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <stdint.h>

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

class Touch
{
    public:
        enum class EAxis : uint8_t
        {
            eX,
            eY
        };

        struct Coordinates
        {
            uint16_t X;
            uint16_t Y;
        };

        Touch () = default;
        virtual ~Touch () = default;

        virtual void        Process        (void)          = 0;
        virtual bool        IsTouched      (void)          = 0;
        virtual Coordinates GetCoordinates (void)          = 0;

    protected:
        virtual uint16_t    getPos         (EAxis v_eAxis) = 0;
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
